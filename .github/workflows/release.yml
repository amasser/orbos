name: Release
on: push
jobs:
  release:
    runs-on: ubuntu-18.04
    steps:
    - name: Source checkout
      uses: actions/checkout@v1
      with:
        fetch-depth: 1
    - name: Go modules cache
      uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          go-
    - name: Go build cache
      uses: actions/cache@v1
      with:
        path: ~/.cache/go-build
        key: go-build
    - name: Release
      shell: bash
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GO111MODULE: on
        CGO_ENABLED: 0
      run: |
        export VERSION=${GITHUB_REF##*/}
        [[ "$VERSION" == "master" ]] && VERSION="v$(npx semantic-release --dry-run --plugins=@semantic-release/commit-analyzer --analize-commits | grep "The next release version is" | sed -ne 's/.*The\ next\ release\ version\ is\ \([0-9]\+\.[0-9]\+\.[0-9]\+\)$/\1/p')"
        export IMAGE=docker.pkg.github.com/caos/orbiter/orbiter
        export TAG_LATEST=${IMAGE}:latest
        export TAG_VERSION=${IMAGE}:${VERSION}
        go mod download
        mkdir -p ./artifacts
        go run cmd/gen-executables/*.go -version "$VERSION" -commit "${{ github.sha }}" --orbctl ./artifacts
        [[ "$VERSION" == "v" ]] && echo "Exiting, as no new version needs to be released" && exit 0
        echo "Publishing Orbiter version $VERSION"
        docker login docker.pkg.github.com -u ci -p ${GITHUB_TOKEN}
        docker build --tag ${TAG_LATEST} --tag ${TAG_VERSION} .
        docker push ${TAG_LATEST}
        docker push ${TAG_VERSION}
        npx semantic-release
